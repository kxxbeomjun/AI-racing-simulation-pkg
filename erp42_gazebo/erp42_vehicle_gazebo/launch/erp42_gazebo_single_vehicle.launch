<?xml version="1.0"?>
<launch>

    <!-- Vehicle -->
    <arg name="total_vehicle_num" default="1" />
    <arg name="use_sim_time" default="true"/>
    <arg name="model" default="$(find erp42_vehicle_description)/urdf/erp42_vehicle.urdf.xacro"/>
    
    <!-- Vehicle initial pose -->
    <arg name="x" default="-106.97" />
    <arg name="y" default="31.89" />
    <arg name="z" default="1.00" />
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="-3.0"/>

    <!-- Launch ERP42 -->
    <group ns="/erp42_$(arg total_vehicle_num)">

        <!-- Load the robot description -->
        <param name="tf_prefix" value="erp42_$(arg total_vehicle_num)" />
        <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>

        <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find erp42_gazebo_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="/erp42_$(arg total_vehicle_num)" />
        <rosparam file="$(find erp42_gazebo_control)/config/ctrl_gains.yaml" command="load" ns="/erp42_$(arg total_vehicle_num)" />
        <rosparam file="$(find erp42_gazebo_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="/erp42_$(arg total_vehicle_num)" />
        <rosparam file="$(find erp42_gazebo_control)/config/ctrl_steer_bot_hardware_gazebo.yaml" command="load" ns="/erp42_$(arg total_vehicle_num)" />

        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="/erp42_$(arg total_vehicle_num)"
            args="joint_state_publisher ackermann_steering_controller" respawn="false">
            <remap from="ackermann_steering_controller/cmd_vel" to="cmd_vel" />
            <remap from="ackermann_steering_controller/odom" to="odom" />
        </node>

        <!-- Launch  the robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="100.0"/>
            <param name="/use_sim_time" value="$(arg use_sim_time)" />
        </node>

        <!-- Joint state publisher -->
        <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="100.0" />
            <param name="/use_sim_time" value="$(arg use_sim_time)"/>
        </node>

        <!-- Spawn robot in Gazebo -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model erp42_$(arg total_vehicle_num)
                -robot_namespace /erp42_$(arg total_vehicle_num)
                -x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"
            respawn="false"/>

        <!-- <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch" /> -->

    </group>

    <node pkg="message_to_tf" type="message_to_tf" name="message_to_tf" args="/erp42_$(arg total_vehicle_num)/ground_truth_pose"/>

    <!-- recursively start new node -->
    <include file="$(find erp42_vehicle_gazebo)/launch/erp42_gazebo_single_vehicle.launch" if="$(eval arg('total_vehicle_num') - 1 > 0)">
        <arg name="total_vehicle_num" value="$(eval arg('total_vehicle_num') - 1)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    </include>

</launch>